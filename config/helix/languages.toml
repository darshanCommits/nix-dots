[language-server.shellcheck]
command = "shellcheck"
args = ["-"]

[language-server.bash-language-server]
command = "bash-language-server"
args = ["start"]


# it is broken for some reason, was working fine all this time
[language-server.nixd]
command = "nixd"
args = ["--inlay-hints", "--semantic-tokens"]
config.nixd.options.home-manager.expr = '(builtins.getFlake "/home/greeed/.dotfiles").homeConfigurations."greeed".options'

[language-server.emmet-language-server]
command = "emmet-language-server"
args = ["--stdio"]

[language-server.sql-language-server]
command = "/home/greeed/go/bin/sqls"

[language-server.hls]
command = "haskell-language-server-wrapper"
args = ["--lsp"]

[language-server.tailwindcss-html]
command = "hx-tw"
args = ["--stdio"]


[language-server.purescript-language-server]
command = "purescript-language-server"
args = ["--stdio"]

[language-server.json-server]
command = "vscode-json-languageserver"
args = ["--stdio"]

[language-server.vscode-json-language-server.config]
provideFormatter = true
[language-server.vscode-json-language-server.config.json]
validate.enable = true
format.enable = true
keepLines.enable = true

[language-server.typescript-language-server]
command = "typescript-language-server"
args = ["--stdio"]

[[language]]
name = "purescript"
language-servers = ["purescript-language-server"]

[[language]]
name = "html"
scope = "text.html.basic"
file-types = ["html"]
language-servers = [
  "tailwindcss-html",
  "emmet-language-server",
  { name = "vscode-html-language-server", except-features = [
    "format",
  ] },
  { name = "efm", only-features = [
    "format",
  ] },
  "biome-lint",
]

[[language]]
name = "php"
file-types = ["php"]
language-servers = ["tailwindcss-html", "emmet-language-server", "phpP"]

[[language]]
name = "sql"
file-types = ["db"]
language-servers = ["sql-language-server"]

# biome official 

[language-server]
biome = { command = "biome", args = ["lsp-proxy"] }

[[language]]
name = "javascript"
auto-format = true
comment-token = "//"
file-types = ["js", "mjs", "cjs"]
injection-regex = "(js|javascript)"
language-id = "javascript"
language-servers = ["typescript-language-server", "biome"]
roots = []
scope = "source.js"
shebangs = ["node"]

[language.formatter]
command = "biome"
args = ["format", "--stdin-file-path", "test.js"]

[language.indent]
tab-width = 2
unit = "  "

[[language]]
name = "typescript"
auto-format = true
file-types = ["ts", "mts", "cts"]
injection-regex = "(ts|typescript)"
language-id = "typescript"
language-servers = ["typescript-language-server", "biome"]
roots = []
scope = "source.ts"
shebangs = []

[language.formatter]
command = "biome"
args = ["format", "--stdin-file-path", "test.ts"]

[language.indent]
tab-width = 2
unit = "\t"

[[language]]
name = "tsx"
auto-format = true
file-types = ["tsx"]
injection-regex = "(tsx)"
language-id = "typescriptreact"
language-servers = [
  "typescript-language-server",
  "biome",
  "emmet-language-server",
  "tailwindcss-html",
]
roots = []
scope = "source.tsx"

[language.formatter]
command = "biome"
args = ["format", "--stdin-file-path", "test.tsx"]

[language.indent]
tab-width = 2
unit = "\t"

[[language]]
name = "jsx"
auto-format = true
comment-token = "//"
file-types = ["jsx"]
grammar = "javascript"
injection-regex = "jsx"
language-id = "javascriptreact"
language-servers = [
  "typescript-language-server",
  "biome",
  "emmet-language-server",
  "tailwindcss-html",
]
roots = []
scope = "source.jsx"

[language.formatter]
command = "biome"
args = ["format", "--stdin-file-path", "test.jsx"]

[language.indent]
tab-width = 2
unit = "\t"

[[language]]
name = "json"
auto-format = true
file-types = ["json", "jsonc", "arb", "ipynb", "geojson"]
injection-regex = "json"
language-servers = ["biome"]
roots = []
scope = "source.json"

[language.formatter]
command = "biome"
args = ["format", "--stdin-file-path", "test.json"]

[[language]]
name = "nix"
file-types = ["nix"]
auto-format = true
language-servers = ["nixd", "nil"]
formatter.command = "alejandra"

[[language]]
name = "toml"
roots = ["."]
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = false

[language-server.rust-analyzer.config.check]
command = "clippy"

[[language]]
name = "bash"
language-servers = ["bash-language-server", "shellcheck"]
formatter = { command = "shfmt" }
auto-format = true


[language-server.taplo.config]
# Workaround for nonsense of being nonfunctional outside git directories
# (https://github.com/helix-editor/helix/issues/3897#issuecomment-2361674437)
root_dir = [".git", "*.toml"]


[[language]]
name = "hyprlang"
scope = "source.hyprlang"
roots = ["hyprland.conf"]
file-types = [{ glob = "hypr/*.conf" }]
comment-token = "#"
grammar = "hyprlang"
language-servers = ["hyprls"]
